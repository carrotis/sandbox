server {
    listen 80;
    server_name example.com;

    # Handle /httpXXX requests
    location ~ ^/http(\d{3})$ {
        # Extract status code from URI into $1
        set $http_status $1;

        # Validate HTTP status code (100-599)
        if ($http_status !~ ^[1-5]\d{2}$) {
            return 400 "Invalid HTTP Status Code\n";
        }

        # Add ETag and Last-Modified for cache validation
        etag on;
        add_header Last-Modified "Tue, 10 Jun 2025 10:00:00 GMT" always;

        # Check if status code is a 3xx redirect (300-399)
        if ($http_status ~ ^3\d{2}$) {
            add_header Location "http://example.com/redirected" always;
            return $http_status "Redirected - HTTP $http_status\n";
        }

        # Handle 204 No Content: return without body
        if ($http_status = 204) {
            return 204;
        }

        # Handle 206 Partial Content: add Content-Range header
        if ($http_status = 206) {
            add_header Content-Range "bytes 0-1023/2048" always;
            return 206 "Partial Content - HTTP 206\n";
        }

        # Handle 500 Internal Server Error
        if ($http_status = 500) {
            return 500 "Internal Server Error - HTTP 500\n";
        }

        # Handle 502 Bad Gateway
        if ($http_status = 502) {
            return 502 "Bad Gateway - HTTP 502\n";
        }

        # Handle 503 Service Unavailable
        if ($http_status = 503) {
            return 503 "Service Unavailable - HTTP 503\n";
        }

        # Handle 504 Gateway Timeout
        if ($http_status = 504) {
            return 504 "Gateway Timeout - HTTP 504\n";
        }

        # Default handling for other valid status codes
        return $http_status "HTTP $http_status\n";
    }

    # Default handling for non-matching requests
    location / {
        return 404 "Not Found\n";
    }
}
